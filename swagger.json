{
  "openapi": "3.0.0",
  "paths": {
    "/providers/sns/receive": {
      "post": {
        "operationId": "SnsController_receiveSns",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "External/Providers/SNS"
        ]
      }
    },
    "/coms/topics/{topicID}/threads": {
      "post": {
        "operationId": "ThreadsController_create",
        "summary": "Create a new thread",
        "parameters": [
          {
            "name": "topicID",
            "required": true,
            "in": "path",
            "description": "The ID of the parent topic",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateThreadDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created thread",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreadDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Public/Threads"
        ],
        "security": [
          {
            "x-auth-token": []
          }
        ]
      },
      "get": {
        "operationId": "ThreadsController_findAll",
        "summary": "Get all threads",
        "parameters": [
          {
            "name": "topicID",
            "required": true,
            "in": "path",
            "description": "The ID of the parent topic",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The threads in the topic",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThreadDTO"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Public/Threads"
        ],
        "security": [
          {
            "x-auth-token": []
          }
        ]
      }
    },
    "/coms/topics/{topicID}/threads/{threadId}": {
      "get": {
        "operationId": "ThreadsController_findById",
        "summary": "Get a thread by ID",
        "parameters": [
          {
            "name": "threadId",
            "required": true,
            "in": "path",
            "description": "The ID of the thread",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topicID",
            "required": true,
            "in": "path",
            "description": "The ID of the parent topic",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The thread",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreadDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Public/Threads"
        ],
        "security": [
          {
            "x-auth-token": []
          }
        ]
      }
    },
    "/coms/topics/{topicID}/threads/{threadId}/messages": {
      "get": {
        "operationId": "ThreadsController_getTopicMessages",
        "summary": "Get all messages in a thread",
        "parameters": [
          {
            "name": "threadId",
            "required": true,
            "in": "path",
            "description": "The ID of the thread",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topicID",
            "required": true,
            "in": "path",
            "description": "The ID of the parent topic",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The messages in the thread",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageDTO"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Public/Threads"
        ],
        "security": [
          {
            "x-auth-token": []
          }
        ]
      },
      "put": {
        "operationId": "MessagesController_replyInThread",
        "summary": "Post a message in a thread",
        "description": "The actorId is the ID of the actor that is posting the message. The message will be sent using the actor definition and using the actor channel defined in the actor definition.",
        "parameters": [
          {
            "name": "topicID",
            "required": true,
            "in": "path",
            "description": "The ID of the parent topic",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threadId",
            "required": true,
            "in": "path",
            "description": "The ID of the thread",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The messages in the thread",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageDTO"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Public/Messages"
        ],
        "security": [
          {
            "x-auth-token": []
          }
        ]
      }
    },
    "/coms/topics": {
      "post": {
        "operationId": "TopicsController_create",
        "summary": "Create a new topic",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTopicDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created topic",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopicDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Public/Topics"
        ],
        "security": [
          {
            "x-auth-token": []
          }
        ]
      },
      "get": {
        "operationId": "TopicsController_findAll",
        "summary": "Get all topics",
        "parameters": [
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The topics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopicDTO"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Public/Topics"
        ],
        "security": [
          {
            "x-auth-token": []
          }
        ]
      }
    },
    "/coms/topics/{id}": {
      "get": {
        "operationId": "TopicsController_findById",
        "summary": "Get a topic by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the topic",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The topic",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopicDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Public/Topics"
        ],
        "security": [
          {
            "x-auth-token": []
          }
        ]
      }
    },
    "/internal/accounts": {
      "get": {
        "operationId": "AccountsController_findAll",
        "summary": "Get all accounts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all accounts.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Internal/Accounts"
        ],
        "security": [
          {
            "x-admin": []
          }
        ]
      },
      "post": {
        "operationId": "AccountsController_create",
        "summary": "Create a new account",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The account has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          }
        },
        "tags": [
          "Internal/Accounts"
        ],
        "security": [
          {
            "x-admin": []
          }
        ]
      }
    },
    "/internal/accounts/{accountSlug}": {
      "get": {
        "operationId": "AccountsController_findOne",
        "summary": "Get account by id",
        "parameters": [
          {
            "name": "accountSlug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return account by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          }
        },
        "tags": [
          "Internal/Accounts"
        ],
        "security": [
          {
            "x-admin": []
          }
        ]
      },
      "delete": {
        "operationId": "AccountsController_remove",
        "summary": "Delete account by id",
        "parameters": [
          {
            "name": "accountSlug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The account has been successfully deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          }
        },
        "tags": [
          "Internal/Accounts"
        ],
        "security": [
          {
            "x-admin": []
          }
        ]
      }
    },
    "/internal/accounts/{accountSlug}/provider-configurations": {
      "post": {
        "operationId": "ProviderConfigurationController_addProviderConfiguration",
        "summary": "Add a new provider configuration",
        "parameters": [
          {
            "name": "accountSlug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderConfigurationDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The provider configuration has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProviderConfigurationDTO"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Internal/Accounts/Provider Configuration"
        ],
        "security": [
          {
            "x-admin": []
          }
        ]
      },
      "get": {
        "operationId": "ProviderConfigurationController_getProviderConfigurations",
        "summary": "Get all provider configurations",
        "parameters": [
          {
            "name": "accountSlug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all provider configurations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProviderConfigurationDTO"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Internal/Accounts/Provider Configuration"
        ],
        "security": [
          {
            "x-admin": []
          }
        ]
      }
    },
    "/internal/accounts/{accountSlug}/provider-configurations/{providerName}": {
      "put": {
        "operationId": "ProviderConfigurationController_updateProviderConfiguration",
        "summary": "Update a provider configuration",
        "parameters": [
          {
            "name": "accountSlug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "providerName",
            "required": true,
            "in": "path",
            "description": "Name of the provider",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderConfigurationDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The provider configuration has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProviderConfigurationDTO"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Internal/Accounts/Provider Configuration"
        ],
        "security": [
          {
            "x-admin": []
          }
        ]
      },
      "delete": {
        "operationId": "ProviderConfigurationController_deleteProviderConfiguration",
        "summary": "Delete a provider configuration",
        "parameters": [
          {
            "name": "accountSlug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "providerName",
            "required": true,
            "in": "path",
            "description": "Name of the provider",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The provider configuration has been successfully deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProviderConfigurationDTO"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Internal/Accounts/Provider Configuration"
        ],
        "security": [
          {
            "x-admin": []
          }
        ]
      }
    },
    "/message-templates": {
      "post": {
        "operationId": "MessageTemplatesController_create",
        "summary": "Create a new message template",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageTemplateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The message template has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMessageTemplateDto"
                }
              }
            }
          },
          "409": {
            "description": "Message template with this name already exists for the account."
          }
        },
        "tags": [
          "Public/MessageTemplates"
        ],
        "security": [
          {
            "x-auth-token": []
          }
        ]
      },
      "get": {
        "operationId": "MessageTemplatesController_findAllByAccountId",
        "summary": "Get all message templates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "All message templates have been successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplateDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Public/MessageTemplates"
        ],
        "security": [
          {
            "x-auth-token": []
          }
        ]
      }
    },
    "/message-templates/{name}": {
      "get": {
        "operationId": "MessageTemplatesController_findOne",
        "summary": "Get a message template by name",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The message template has been successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplateDto"
                }
              }
            }
          }
        },
        "tags": [
          "Public/MessageTemplates"
        ],
        "security": [
          {
            "x-auth-token": []
          }
        ]
      },
      "put": {
        "operationId": "MessageTemplatesController_update",
        "summary": "Update a message template",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMessageTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The message template has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplateDto"
                }
              }
            }
          }
        },
        "tags": [
          "Public/MessageTemplates"
        ],
        "security": [
          {
            "x-auth-token": []
          }
        ]
      },
      "delete": {
        "operationId": "MessageTemplatesController_delete",
        "summary": "Delete a message template",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The message template has been successfully deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplateDto"
                }
              }
            }
          }
        },
        "tags": [
          "Public/MessageTemplates"
        ],
        "security": [
          {
            "x-auth-token": []
          }
        ]
      }
    },
    "/message-templates/{name}/render/{type}": {
      "post": {
        "operationId": "MessageTemplatesController_renderTemplate",
        "summary": "Render an email template with parameters",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Type of the template",
            "schema": {
              "enum": [
                "text",
                "html"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "AVJ Parameters for the template",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Object"
              },
              "examples": {
                "Welcome": {
                  "value": {
                    "firstName": "John"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rendered email content."
          },
          "400": {
            "description": "Invalid parameters or template not found."
          }
        },
        "tags": [
          "Public/MessageTemplates"
        ],
        "security": [
          {
            "x-auth-token": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Threads API",
    "description": "The threads API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "x-auth-token": {
        "scheme": "bearer",
        "bearerFormat": "Token",
        "type": "http"
      },
      "x-admin": {
        "scheme": "bearer",
        "bearerFormat": "Token",
        "type": "http"
      }
    },
    "schemas": {
      "TagValueDTO": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The tag key",
            "example": "key"
          },
          "value": {
            "type": "string",
            "description": "The tag value",
            "example": "value"
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "ActorProviderDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The actor ID",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          },
          "externalId": {
            "type": "string",
            "description": "The actor external ID",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          },
          "providerSlug": {
            "type": "string",
            "description": "The actor available providers",
            "example": "ses"
          },
          "identifier": {
            "type": "string",
            "description": "The actor identifier (given by provider)",
            "example": "johndoe@test.com"
          },
          "providerSpecificData": {
            "type": "object",
            "description": "The actor provider specific data",
            "example": {
              "something": "something"
            }
          },
          "tags": {
            "description": "The tags.",
            "example": [
              {
                "key": "key",
                "value": "value"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagValueDTO"
            }
          }
        },
        "required": [
          "id",
          "externalId",
          "providerSlug",
          "identifier",
          "providerSpecificData"
        ]
      },
      "CreateActorDTO": {
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "The actor external ID",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          },
          "providers": {
            "description": "The actor providers",
            "example": [
              {
                "providerSlug": "ses",
                "identifier": "johndoe@test.com",
                "providerSpecificData": {
                  "something": "something"
                }
              }
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/ActorProviderDTO"
              }
            ]
          },
          "tags": {
            "description": "The tags.",
            "example": [
              {
                "key": "key",
                "value": "value"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagValueDTO"
            }
          }
        },
        "required": [
          "externalId",
          "providers"
        ]
      },
      "CreateMessageDTO": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The message text",
            "example": "Hello, how are you?"
          },
          "actorId": {
            "type": "string",
            "description": "The actor ID",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          },
          "providerId": {
            "type": "string",
            "description": "The actor's provider ID",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          },
          "templateName": {
            "type": "string",
            "description": "The name of the template to use",
            "example": "welcome-email"
          },
          "templateParams": {
            "type": "object",
            "description": "The parameters to use in the template",
            "example": {
              "name": "John Doe",
              "email": "johndoe@test.com"
            }
          },
          "tags": {
            "description": "The tags.",
            "example": [
              {
                "key": "key",
                "value": "value"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagValueDTO"
            }
          }
        },
        "required": [
          "text",
          "actorId",
          "providerId",
          "templateName",
          "templateParams"
        ]
      },
      "CreateThreadDTO": {
        "type": "object",
        "properties": {
          "actors": {
            "description": "The actors",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateActorDTO"
              }
            ]
          },
          "messages": {
            "description": "The messages",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateMessageDTO"
              }
            ]
          },
          "subject": {
            "type": "string",
            "description": "The subject",
            "example": "Hello, how are you?"
          },
          "tags": {
            "description": "The tags.",
            "example": [
              {
                "key": "key",
                "value": "value"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagValueDTO"
            }
          }
        },
        "required": [
          "actors",
          "messages",
          "subject"
        ]
      },
      "ActorDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The actor ID",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          },
          "externalId": {
            "type": "string",
            "description": "The actor external ID",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          },
          "providers": {
            "description": "The actor providers",
            "example": [
              {
                "providerSlug": "ses",
                "identifier": "johndoe@test.com",
                "providerSpecificData": {
                  "something": "something"
                }
              }
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/ActorProviderDTO"
              }
            ]
          }
        },
        "required": [
          "id",
          "externalId",
          "providers"
        ]
      },
      "MessageDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The message ID",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          },
          "text": {
            "type": "string",
            "description": "The message text",
            "example": "Hello, how are you?"
          },
          "parsedText": {
            "type": "string",
            "description": "Experimental. Try and remove the quoted text from the message text and return just the new content.",
            "example": "Hello, how are you?"
          },
          "actorId": {
            "type": "string",
            "description": "The actor ID",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          },
          "providerId": {
            "type": "string",
            "description": "The actor's provider ID used in the message",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          }
        },
        "required": [
          "id",
          "text",
          "parsedText",
          "actorId",
          "providerId"
        ]
      },
      "ThreadDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The message ID",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          },
          "actors": {
            "description": "The actors",
            "allOf": [
              {
                "$ref": "#/components/schemas/ActorDTO"
              }
            ]
          },
          "messages": {
            "description": "The messages",
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageDTO"
              }
            ]
          },
          "subject": {
            "type": "string",
            "description": "The subject",
            "example": "Hello, how are you?"
          }
        },
        "required": [
          "id",
          "actors",
          "messages",
          "subject"
        ]
      },
      "CreateTagDTO": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The tag key",
            "example": "key"
          },
          "value": {
            "type": "string",
            "description": "The tag value",
            "example": "value"
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "CreateTopicDTO": {
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "The topic external ID",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          },
          "tags": {
            "description": "The tags",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateTagDTO"
              }
            ]
          }
        },
        "required": [
          "externalId",
          "tags"
        ]
      },
      "TagDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The tag ID",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          },
          "key": {
            "type": "string",
            "description": "The tag key",
            "example": "key"
          },
          "value": {
            "type": "string",
            "description": "The tag value",
            "example": "value"
          }
        },
        "required": [
          "id",
          "key",
          "value"
        ]
      },
      "TopicDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The topic ID",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          },
          "externalId": {
            "type": "string",
            "description": "The topic external ID",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          },
          "tags": {
            "description": "The tags",
            "allOf": [
              {
                "$ref": "#/components/schemas/TagDTO"
              }
            ]
          },
          "threads": {
            "description": "The threads",
            "allOf": [
              {
                "$ref": "#/components/schemas/ThreadDTO"
              }
            ]
          }
        },
        "required": [
          "id",
          "externalId",
          "tags",
          "threads"
        ]
      },
      "AccountDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The actor ID",
            "example": "5f3a7b3d8e1d1d001f5b1e3c"
          },
          "accountSlug": {
            "type": "string",
            "description": "The account slug",
            "example": "account-slug"
          },
          "accountName": {
            "type": "string",
            "description": "The account name",
            "example": "account-name"
          },
          "token": {
            "type": "string",
            "description": "The token",
            "example": "token"
          }
        },
        "required": [
          "id",
          "accountSlug",
          "accountName",
          "token"
        ]
      },
      "CreateAccountDto": {
        "type": "object",
        "properties": {
          "accountSlug": {
            "type": "string",
            "description": "The account slug",
            "example": "account-slug"
          },
          "accountName": {
            "type": "string",
            "description": "The account name",
            "example": "account-name"
          }
        },
        "required": [
          "accountSlug",
          "accountName"
        ]
      },
      "ProviderConfigurationDTO": {
        "type": "object",
        "properties": {
          "providerName": {
            "type": "string",
            "description": "The provider name",
            "example": "ses-internal-name1"
          },
          "providerConfig": {
            "type": "object",
            "description": "The provider configuration",
            "example": {
              "smtpUrl": "smtp-url",
              "smtpPort": 1234
            }
          }
        },
        "required": [
          "providerName",
          "providerConfig"
        ]
      },
      "CreateMessageTemplateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "welcome",
            "description": "The name of the message template"
          },
          "subject": {
            "type": "string",
            "example": "Welcome to our platform!",
            "description": "The subject of the message template"
          },
          "htmlContent": {
            "type": "string",
            "example": "<h1>Welcome to our platform!</h1>",
            "description": "The HTML content of the message template"
          },
          "textContent": {
            "type": "string",
            "example": "Welcome to our platform!",
            "description": "The text content of the message template"
          },
          "jsonSchema": {
            "type": "object",
            "description": "JSON schema for template parameters"
          }
        },
        "required": [
          "name",
          "subject",
          "htmlContent",
          "textContent"
        ]
      },
      "MessageTemplateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The message template name",
            "example": "welcome"
          },
          "subject": {
            "type": "string",
            "description": "The message template subject",
            "example": "Welcome to our platform!"
          },
          "htmlContent": {
            "type": "string",
            "description": "The message template HTML content",
            "example": "<h1>Welcome to our platform!</h1>"
          },
          "textContent": {
            "type": "string",
            "description": "The message template text content",
            "example": "Welcome to our platform!"
          },
          "jsonSchema": {
            "type": "object",
            "description": "JSON schema for template parameters"
          }
        },
        "required": [
          "name",
          "subject",
          "htmlContent",
          "textContent"
        ]
      },
      "UpdateMessageTemplateDto": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "example": "Welcome to our platform!",
            "description": "The subject of the message template"
          },
          "htmlContent": {
            "type": "string",
            "example": "<h1>Welcome to our platform!</h1>",
            "description": "The HTML content of the message template"
          },
          "textContent": {
            "type": "string",
            "example": "Welcome to our platform!",
            "description": "The text content of the message template"
          },
          "jsonSchema": {
            "type": "object",
            "description": "JSON schema for template parameters"
          }
        },
        "required": [
          "subject",
          "htmlContent",
          "textContent"
        ]
      },
      "Object": {
        "type": "object",
        "properties": {}
      }
    }
  }
}